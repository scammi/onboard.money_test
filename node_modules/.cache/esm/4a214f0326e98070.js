let App,apiKey;_26e‍.w("@onboardmoney/sdk",[["App",["App"],function(v){App=v}]]);_26e‍.w("./apiKey.js",[["default",["apiKey"],function(v){apiKey=v}]]);


const apikey = apiKey;
const network = 'goerli';
const onboardmoney = new App(apikey, `https://${network}.onboard.money`);
const address = '0x711D96a560f72A048bDc64D87526249a82aB5D02';

async function balance() {
    // Fetch application ETH balance and address for gas payments
    const { balance, relayAddress } = await onboardmoney.balance();
    _26e‍.g.console.log(balance);
}

async function deploy() {
    const { appAddress } = await onboardmoney.deploy();
    _26e‍.g.console.log(appAddress);
}

async function createUser() {
    const { userAddress } = await onboardmoney.createUser();
    _26e‍.g.console.log(userAddress);
}

async function get_policy() {
    const { policy } = await onboardmoney.getPolicy(); 
    _26e‍.g.console.log(policy);
}

async function createTrx() {
    const userAddress = '0xdCD3a7aEf5994b731Cc90395894fD4475dD6AdFd'
    const batch = {
    txs: [
        {
            from: userAddress,
            to: '0x5b2554112Ce698B023CC7fF4EB27eAd0e3fad019',
            value: 5000000000000000,
            gasLimit: '100000',
        },
    ],
    }
    const txReceipt = await onboardmoney.sendBatch(batch);
    _26e‍.g.console.log(userAddress);
}

//   deploy().catch((error) =>{
//     console.log(error);
//   })

  balance().catch((error) => {
    _26e‍.g.console.log(error);
  });

// createUser().catch((error) => {
//     console.log(error);
// });

// get_policy().catch((error)=> {
//     console.log(error);
// })

// createTrx().catch((error)=> {
//     console.log(error);
// })
