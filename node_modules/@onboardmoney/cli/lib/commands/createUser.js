"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@oclif/command");
const cli_ux_1 = require("cli-ux");
const sdk_1 = require("@onboardmoney/sdk");
class CreateUser extends command_1.Command {
    async run() {
        var _a, _b;
        // parse args
        const { args, flags } = this.parse(CreateUser);
        // pull apikey from arg or cache
        const apikey = (_a = args.apikey) !== null && _a !== void 0 ? _a : '';
        // validate apikey
        if (!apikey) {
            this.error(`invalid apikey ${apikey}`);
        }
        // pull network from arg or cache
        const network = (_b = args.network) !== null && _b !== void 0 ? _b : '';
        // validate network
        const networks = ['mainnet', 'ropsten', 'kovan', 'rinkeby', 'goerli'];
        if (!networks.includes(network)) {
            this.error(`invalid network: ${network}`);
        }
        // init client
        const onboardmoney = new sdk_1.App(apikey, `https://${network}.onboard.money`);
        // todo: check for sufficient balance
        // create user
        cli_ux_1.default.action.start('Creating new user');
        const { userAddress } = await onboardmoney.createUser();
        cli_ux_1.default.action.stop(`New user created at ${userAddress} on ${network}`);
        cli_ux_1.default.url(userAddress, network === 'mainnet'
            ? `https://etherscan.io/address/${userAddress}`
            : `https://${network}.etherscan.io/address/${userAddress}`);
    }
}
exports.default = CreateUser;
CreateUser.description = 'Create a new application user';
CreateUser.examples = [
    `$ onboardmoney create-user --network=mainnet
Creating new user...
New user created at 0x1234 on mainnet
https://etherscan.io/address/0x1234
`,
];
CreateUser.flags = {
    help: command_1.flags.help({ char: 'h' }),
    network: command_1.flags.string({
        char: 'n',
        description: 'network to target',
    }),
    apikey: command_1.flags.string({
        char: 'a',
        description: 'apikey to attach',
    }),
};
CreateUser.args = [{ name: 'network' }, { name: 'apikey' }];
